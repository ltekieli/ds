#!/usr/bin/python

import argparse
import os
from ds.api import session
from ds.printer import print_tasks


def main():
    parser = argparse.ArgumentParser(
        description='Utility for listing, creating and deleting tasks in Synology Download Station',
        epilog='Utility can use environment variables: SYNO_IP, SYNO_PORT, SYNO_USER, SYNO_PASSWD instead of arguments'
    )
    parser.add_argument("-i", "--ip", nargs='?', help="Synology ip")
    parser.add_argument("-r", "--port", nargs='?', help="Synology port")
    parser.add_argument("-u", "--user", nargs='?', help="Synology username")
    parser.add_argument("-p", "--passwd", nargs='?', help="Synology user password")
    parser.add_argument("-c", "--create", nargs='+', help="Creates new download from link")
    parser.add_argument("-d", "--delete", nargs='+', help="Delets task based on its name")
    args = parser.parse_args()

    if not args.ip:
        args.ip = os.environ['SYNO_IP']

    if not args.port:
        args.port = os.environ['SYNO_PORT']

    if not args.user:
        args.user = os.environ['SYNO_USER']

    if not args.passwd:
        args.passwd = os.environ['SYNO_PASSWD']

    with session(args.ip, args.port, args.user, args.passwd) as task_api:
        if args.create:
            for uri in args.create:
                if task_api.create(uri).success:
                    print("Torrent added succesfully")
                else:
                    print("ERROR! Torrent not added")

        if args.delete:
            for name in args.delete:
                if task_api.delete(name).success:
                    print("Torrent {} deleted succesfully".format(name))
                else:
                    print("ERROR! Torrent {} not deleted".format(name))

        if not args.create and not args.delete:
            data = task_api.list().data
            print_tasks(data["tasks"])


if __name__ == "__main__":
    main()
